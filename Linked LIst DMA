#include <stdio.h>
#include <stdlib.h>
struct Node{
    int data;
    struct Node * next;
};
struct Node * create_Node(){
    return (struct Node *)malloc(sizeof(struct Node));
}
void display(struct Node* head){
    struct Node* temp = head;
    while(temp!=NULL){
        printf("%d->",temp->data);
        temp = temp->next;
    }
    printf("Null\n");
}
int size(struct Node * head){
    int count = 0;
    struct Node *  ptr=head;
    while(ptr != NULL){
        count++;
        ptr=ptr->next;
    }
    return count;
    
}
void search(struct Node * head ,int target){
    struct Node* temp = head;
    int idx=0,flag=1;
    while(temp!=NULL){
        idx++;
        if(temp->data==target){
        printf("The item %d is present at position %d\n",target,idx);
        return;
        }
        temp=temp->next;
    }if(flag) printf("The item %d is not found.\n",target);
}
void insertAtHead(struct Node **head, int value){
    struct Node *temp = (struct Node*)malloc(sizeof(struct Node));
        temp->data = value;
        temp->next=*head;
        (*head) = temp;
}
void insertAtTail(struct Node **head, int value){
    if(head==NULL){
        insertAtHead(head,value);
        return;
    }
    struct Node * ptr = *head;
    while(ptr->next!=NULL){
        ptr=ptr->next;
    }
    struct Node *temp = (struct Node*)malloc(sizeof(struct Node));
        temp->data = value;
        temp->next=NULL;
        ptr->next=temp;
}

void insertAt(struct Node ** head , int idx , int value){
    if(size(*head)+1<=idx){
        printf("Index is out of bound\n");
        return;
    }
    if(idx==0){
        insertAtHead(head,value);
        return;
    }
    if(idx==size(*head)){
        insertAtTail(head , value);
        return;
    }
    else{
        struct Node * ptr = *head;
        for(int i=0; i<idx-1; i++){
            ptr=ptr->next;
        }
        struct Node *temp = (struct Node*)malloc(sizeof(struct Node));
        temp->data = value;
        temp->next=ptr->next;
        ptr->next=temp;
        }
}

void deleteHead(struct Node ** head ){
    if((*head)->next==NULL){
        free(*head);
        (*head)=NULL;
    }
    else{
        struct Node *p = *head;
        *head = (*head)->next;
        free(p);
    }
}
void delete(struct Node ** head ,int target){
    struct Node* temp = *head;
    if(temp->next==NULL){
        free(temp);
        *head= NULL;
    }
    if(temp->data==target){
        deleteHead(head);
        return;
    }
    int flag=1;
    while(temp->next!=NULL){
        if(temp->next->data==target){
            struct Node *p = temp;
            temp->next=temp->next->next;
            free(p);
            return;
        }
        temp=temp->next;
    }if(flag) printf("The item %d is not found.\n",target);
}
int main() {
    struct Node * start=NULL; // head of data
    int choice = 1;
    while(choice){
        printf("1.Display \t 2.Size \t 3.Search\n4.InsertAtSpecific \t 5.InsertAtStart \t 6.InsertAtEnd\n7.DeleteFirst\t8.DeleteItem\t9.Exit\n");
        printf("Enter Your Choice : ");
        scanf("%d",&choice);
            if(choice ==1 ) display(start);
            else if(choice ==2 ) size(start);
            else if(choice ==3 ) {
                printf("Enter the intacter which you want to search : ");
                int target;
                scanf("%d",&target);
                search(start,target);
                // if(search(start,target) !=-1)
                //     printf(" at index %d \n",search(start,target);
                // else printf("Target is not present in the list \n");
            }
            else if(choice ==4 ){
                printf("Enter the element : ");
                int val;
                scanf("%d",&val);
                printf("Enter the location : ");
                int loc ;
                scanf("%d",&loc);
                insertAt(&start ,loc , val);
            }
            else if(choice ==5 ){
                printf("Enter the element : ");
                int val;
                scanf("%d",&val);
                insertAtHead(&start,val);
            }
            else if(choice ==6 ){
                printf("Enter the element : ");
                int val;
                scanf("%d",&val);
                insertAtTail(&start,val);
            }
            else if(choice ==7 ){
                deleteHead(&start);
            }
            else if(choice ==8 ){
                printf("Enter the value you want to delete : ");
                int target;
                scanf("%d",&target);
                delete(&start, target);
            }
            else if(choice ==9) break;
            else{
                printf("Wrong Input!!");
            }
            
        }
    printf("Program end here");

    return 0;
    
}
