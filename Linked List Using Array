#include <stdio.h>
void traversing(char *data , int *link , int *start){
    int ptr = *start;
    while (ptr!=-1){
        printf("%c -> ",data[ptr]);
        ptr=link[ptr];
    }
    printf("null");
    printf("\n");
}
void insertAt(char *data , int *link ,int *start ,int *avail, char value , int idx){
    int flag=0;
    if(*avail==-1){
        printf("OverFlow");
        return;
    }
    int ptr = *start;
    while(ptr!=-1){
        if(ptr==idx){ 
            flag=1;
            break;
        }
        ptr=link[ptr];
    }
    if (flag==0){
        printf("Given index is not found in the list\n");
        return;
    }
    int temp=*avail;
    *avail=link[*avail];
    data[temp]=value;
    link[temp]=link[ptr];
    link[ptr]=temp;
}
void insertAtHead(char *data , int *link ,int *start ,int *avail, char value ){
    if(*avail==-1){
        printf("OverFlow");
        return;
    }
    
    int temp=*avail;
    *avail=link[*avail];
    data[temp]=value;
    link[temp]=*start;
    *start=temp;
}
void insertAtTail(char *data , int *link ,int *start ,int *avail, char value ){
    if(*avail==-1){
        printf("OverFlow");
        return;
    }
    int ptr=*start;
    while (link[ptr]!=-1){
        ptr=link[ptr];
    }
    int temp=*avail;
    *avail=link[*avail];
    data[temp]=value;
    link[temp]=-1;
    link[ptr]=temp;
}
void size(int *start , char *data , int *link){
    int count = 0;
    int ptr=*start;
    while(ptr != -1){
        count++;
        ptr=link[ptr];
    }
    printf("The length of the list is : %d\n",count);
    
}
int search(int *start ,char target, char *data , int *link){
    int ptr=*start;
    int idx = 0;
    while(ptr != -1){
        if(data[ptr]==target){
        printf("It's present at position %d and",idx);
        return ptr;
        }
        idx++;
        ptr=link[ptr];
    }
    return -1;
}

int main() {
    int start=0; // head of data
    int avail=1; // head of empty data
    char data[10]; // List for storing data
    int link[10]; // List for storing the indexes
    
    // Assingning the data and next index
    data[0]='A'; link[0]=4; 
    data[4]='D'; link[4]=6;
    data[6]='G'; link[6]=2;
    data[2]='X'; link[2]=-1;
    link[1]=3;
    link[3]=5;
    link[5]=7;
    link[7]=8;
    link[8]=9;
    link[9]=-1;
    
    traversing(data,link,&start); // A -> D -> G -> X -> null
    size(&start , data ,link); // size is  4
    insertAt(data, link ,&start,&avail,'J',4);
    traversing(data,link,&start); // A -> D -> J -> G -> X -> null
    size(&start , data ,link); // size is 5
    insertAt(data, link ,&start,&avail,'L',6);
    traversing(data,link,&start); 
    size(&start , data ,link); 
    insertAtHead(data, link ,&start,&avail,'Z');
    traversing(data,link,&start); 
    size(&start , data ,link); 
    insertAtHead(data, link ,&start,&avail,'P');
    traversing(data,link,&start); 
    size(&start , data ,link); 
    insertAtTail(data, link ,&start,&avail,'Q');
    traversing(data,link,&start); 
    size(&start , data ,link); 
    insertAtTail(data, link ,&start,&avail,'H');
    traversing(data,link,&start); 
    size(&start , data ,link); 
    
    // printf("Enter the character which you want to search : ");
    // char target;
    // scanf("%c",&target);
    // if(search(*start,target , data ,link) !=-1)
    // printf(" at index %d \n",search(&start,target , data ,link));
    // else printf("Character is not present in the list \n");
    printf("Program end here");

    return 0;
}
